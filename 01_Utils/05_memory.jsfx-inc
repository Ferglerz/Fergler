// Memory Management Module
// Pure memory allocation and management functions
// No dependencies - contains memory layout constants

@init

//==============================================================================
// MEMORY ALLOCATION FUNCTIONS
//==============================================================================

function allocate_memory() (
  // Initialize automatic memory allocation
  freemem = 0;
  
  // Allocate graph points memory (2 values per point: x,y)
  !graph_points ? graph_points = freemem;
  freemem += MAX_POINTS * 2;
  
  // Allocate curve amounts memory (1 value per point)
  !curve_amounts ? curve_amounts = freemem;
  freemem += MAX_POINTS;
  
  // Allocate compression lookup table (400 entries for -50dB to +50dB at 0.25dB granularity)
  !comp_lut ? comp_lut = freemem;
  freemem += COMP_LUT_SIZE;
  
  // Allocate control definitions memory (11 values per control: added group_index field)
  !control_defs ? control_defs = freemem;
  freemem += NUM_CONTROLS * 11;

  // Allocate unified knob definitions memory (10 values per knob: added group_index field)
  // size: 0=small (KNOB_SIZE), 1=large (LARGE_KNOB_SIZE)
  !knob_defs ? knob_defs = freemem;
  freemem += NUM_KNOBS * 10;

  // Allocate group definitions memory (6 values per group: x, y, w, h, show_title, title_string_ptr)
  // title_string_ptr points to a string buffer (allocated separately below)
  !group_defs ? group_defs = freemem;
  freemem += NUM_GROUPS * 6;
  
  // Allocate string buffer for group titles (50 chars per group max)
  !group_title_strings ? group_title_strings = freemem;
  freemem += NUM_GROUPS * 50;

  // Always allocate audio buffers (these can be reallocated safely)
  // Allocate based on lookahead slider's maximum value (slider5)
  // Convert from milliseconds to samples: max_ms * 0.001 * srate
  lookahead_max_ms = get_slider_max(5); // Get max from slider definition
  lookahead_needed_samples = ceil(lookahead_max_ms * 0.001 * srate);
  
  // OPTIMIZATION: Round up to next power of 2 for efficient bit masking instead of modulo
  // This allows using (index & mask) instead of (index % size) in circular buffer
  max_lookahead_samples = 1;
  while(max_lookahead_samples < lookahead_needed_samples) (
    max_lookahead_samples *= 2;
  );
  lookahead_mask = max_lookahead_samples - 1; // For bit masking: (pos & mask) == (pos % size)
  
  lookahead_buffer_l = freemem; freemem += max_lookahead_samples;
  lookahead_buffer_r = freemem; freemem += max_lookahead_samples;

  // RMS buffers: Stereo interleaved storage [L, R, L, R, ...]
  max_rms_samples = ceil(0.1 * srate);
  rms_buffer = freemem; freemem += max_rms_samples * 2; // *2 for stereo
  
  // Slider properties buffer (4 properties per control)
  slider_properties_base = freemem;
  freemem += NUM_CONTROLS * 4;
  
  // Trail buffer allocation (4 values per dot: x, y, age, max_age)
  // Use default values for initial allocation (will be recalculated in @slider)
  trail_max_dots = 100; // Default size, will be recalculated when sliders are available
  trail_buffer = freemem;
  freemem += trail_max_dots * 4;
);

function get_memory_usage() (
  freemem; // Return current memory usage
);
