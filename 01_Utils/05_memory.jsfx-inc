// Memory Management Module
// Pure memory allocation and management functions
// No dependencies - contains memory layout constants

@init

//==============================================================================
// MEMORY ALLOCATION FUNCTIONS
//==============================================================================

function allocate_memory() (
  debug_log("Allocating memory...");
  
  // Initialize automatic memory allocation
  freemem = 0;
  
  // Allocate graph points memory (2 values per point: x,y)
  !graph_points ? graph_points = freemem;
  freemem += MAX_POINTS * 2;
  
  // Allocate curve amounts memory (1 value per point)
  !curve_amounts ? curve_amounts = freemem;
  freemem += MAX_POINTS;
  
  // Allocate compression lookup table (400 entries for -50dB to +50dB at 0.25dB granularity)
  !comp_lut ? comp_lut = freemem;
  freemem += COMP_LUT_SIZE;
  
  // Allocate control definitions memory (10 values per control)
  !control_defs ? control_defs = freemem;
  freemem += NUM_CONTROLS * 10;

  // Allocate unified knob definitions memory (9 values per knob: x, y, param_index, min_val, max_val, type, size, is_active, current_value)
  // size: 0=small (KNOB_SIZE), 1=large (LARGE_KNOB_SIZE)
  !knob_defs ? knob_defs = freemem;
  freemem += NUM_KNOBS * 9;

  // Always allocate audio buffers (these can be reallocated safely)
  // Allocate based on lookahead slider's maximum value (slider5)
  // Convert from milliseconds to samples: max_ms * 0.001 * srate
  lookahead_max_ms = get_slider_max(5); // Get max from slider definition
  max_lookahead_samples = ceil(lookahead_max_ms * 0.001 * srate);
  lookahead_buffer_l = freemem; freemem += max_lookahead_samples;
  lookahead_buffer_r = freemem; freemem += max_lookahead_samples;

  // RMS buffers: Stereo interleaved storage [L, R, L, R, ...]
  max_rms_samples = ceil(0.1 * srate);
  rms_buffer = freemem; freemem += max_rms_samples * 2; // *2 for stereo
  
  debug_logf("Memory allocated: %d bytes", freemem);
);

function get_memory_usage() (
  freemem; // Return current memory usage
);
