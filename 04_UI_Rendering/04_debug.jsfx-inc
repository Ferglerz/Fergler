// UI Rendering - Debug Module
// Debug performance counter visualization
// Dependencies: 04_UI/01_ui_constants.jsfx-inc

@init

//==============================================================================
// DEBUG PERFORMANCE COUNTERS RENDERING
//==============================================================================

function draw_debug_performance_counters() (
  // Vertical stacked layout with proper categorization
  line_height = 16;
  panel_width = 200;
  panel_gap_x = 15;
  panel_gap_y = 10;
  start_x = 50;
  start_y = 390;
  
  // === RIGHT STACK: UI, MATH, PROGRAM RELEASE ===
  // Position after graph: GRAPH_X (695) + GRAPH_SIZE (263) + gap (30) = 988
  right_stack_x = 988;
  
  // --- UI Functions Panel ---
  ui_panel_x = right_stack_x;
  ui_panel_y = start_y;
  ui_panel_w = 200;
  ui_panel_h = 28 + (4 * line_height); // Title + 4 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(ui_panel_x, ui_panel_y, ui_panel_w, ui_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(ui_panel_x, ui_panel_y, ui_panel_w, ui_panel_h, 0);
  
  // Title
  gfx_set(1.0, 0.8, 0.5, 1); // Orange
  gfx_x = ui_panel_x + 10;
  gfx_y = ui_panel_y + 8;
  gfx_drawstr("UI Rendering");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = ui_panel_x + 8;
  text_y = ui_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("curves()");
  gfx_x = ui_panel_x + ui_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_ui_curves);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("histogram()");
  gfx_x = ui_panel_x + ui_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_ui_histogram);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("graph_bg()");
  gfx_x = ui_panel_x + ui_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_graph_bg);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("grid()");
  gfx_x = ui_panel_x + ui_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_grid);
  
  // --- Math Conversions Panel ---
  math_panel_x = right_stack_x;
  math_panel_y = ui_panel_y + ui_panel_h + panel_gap_y;
  math_panel_w = 200;
  math_panel_h = 28 + (3 * line_height); // Title + 3 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(math_panel_x, math_panel_y, math_panel_w, math_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(math_panel_x, math_panel_y, math_panel_w, math_panel_h, 0);
  
  // Title
  gfx_set(0.5, 1.0, 0.5, 1); // Green
  gfx_x = math_panel_x + 10;
  gfx_y = math_panel_y + 8;
  gfx_drawstr("Math Utils");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = math_panel_x + 8;
  text_y = math_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("db_to_linear()");
  gfx_x = math_panel_x + math_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_db_to_linear);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("linear_to_db()");
  gfx_x = math_panel_x + math_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_linear_to_db);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("clamp()");
  gfx_x = math_panel_x + math_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_clamp);
  
  // --- Program Release Panel ---
  prog_panel_x = right_stack_x;
  prog_panel_y = math_panel_y + math_panel_h + panel_gap_y;
  prog_panel_w = 200;
  prog_panel_h = 28 + (2 * line_height); // Title + 2 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(prog_panel_x, prog_panel_y, prog_panel_w, prog_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(prog_panel_x, prog_panel_y, prog_panel_w, prog_panel_h, 0);
  
  // Title
  gfx_set(1.0, 0.5, 1.0, 1); // Magenta
  gfx_x = prog_panel_x + 10;
  gfx_y = prog_panel_y + 8;
  gfx_drawstr("Prog Release");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = prog_panel_x + 8;
  text_y = prog_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("prog_release()");
  gfx_x = prog_panel_x + prog_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_prog_release);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("single_env()");
  gfx_x = prog_panel_x + prog_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_single_envelope);
  
  // === AUDIO PROCESSING COLUMNS (3 categories, 3 functions each) ===
  
  // --- COLUMN 1: Detection & Analysis ---
  detect_panel_x = start_x;
  detect_panel_y = start_y;
  detect_panel_w = 200;
  detect_panel_h = 28 + (3 * line_height); // Title + 3 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(detect_panel_x, detect_panel_y, detect_panel_w, detect_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(detect_panel_x, detect_panel_y, detect_panel_w, detect_panel_h, 0);
  
  // Title
  gfx_set(0.5, 0.8, 1.0, 1); // Light blue
  gfx_x = detect_panel_x + 10;
  gfx_y = detect_panel_y + 8;
  gfx_drawstr("Detection");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = detect_panel_x + 8;
  text_y = detect_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("gain_red()");
  gfx_x = detect_panel_x + detect_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_gain_reduction);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("curve_interp()");
  gfx_x = detect_panel_x + detect_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_curve_interp);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("lut_lookup()");
  gfx_x = detect_panel_x + detect_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_lut_lookup);
  
  // --- COLUMN 2: Envelope & Dynamics ---
  env_panel_x = start_x;
  env_panel_y = detect_panel_y + detect_panel_h + panel_gap_y;
  env_panel_w = 200;
  env_panel_h = 28 + (3 * line_height); // Title + 3 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(env_panel_x, env_panel_y, env_panel_w, env_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(env_panel_x, env_panel_y, env_panel_w, env_panel_h, 0);
  
  // Title
  gfx_set(0.8, 0.5, 1.0, 1); // Purple
  gfx_x = env_panel_x + 10;
  gfx_y = env_panel_y + 8;
  gfx_drawstr("Envelope");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = env_panel_x + 8;
  text_y = env_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("envelope()");
  gfx_x = env_panel_x + env_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_envelope);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("min_env()");
  gfx_x = env_panel_x + env_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_min_envelope);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("audio_chain()");
  gfx_x = env_panel_x + env_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_audio_chain);
  
  // --- COLUMN 3: Effects & Output ---
  fx_panel_x = start_x;
  fx_panel_y = env_panel_y + env_panel_h + panel_gap_y;
  fx_panel_w = 200;
  fx_panel_h = 28 + (3 * line_height); // Title + 3 functions
  
  // Background
  gfx_set(0.1, 0.1, 0.1, 0.85);
  gfx_rect(fx_panel_x, fx_panel_y, fx_panel_w, fx_panel_h, 1);
  
  // Border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(fx_panel_x, fx_panel_y, fx_panel_w, fx_panel_h, 0);
  
  // Title
  gfx_set(1.0, 0.6, 0.3, 1); // Orange-red
  gfx_x = fx_panel_x + 10;
  gfx_y = fx_panel_y + 8;
  gfx_drawstr("Effects");
  
  // Functions
  gfx_set(0.9, 0.9, 0.9, 1);
  text_x = fx_panel_x + 8;
  text_y = fx_panel_y + 28;
  
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("harmonics()");
  gfx_x = fx_panel_x + fx_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_harmonics);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("lookahead()");
  gfx_x = fx_panel_x + fx_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_lookahead);
  
  text_y += line_height;
  gfx_x = text_x;
  gfx_y = text_y;
  gfx_drawstr("limiter()");
  gfx_x = fx_panel_x + fx_panel_w - 70;
  gfx_y = text_y;
  gfx_printf("%d", debug_display_limiter);
);

