// UI Utilities Module
// Pure UI utility functions with no dependencies
// Contains control accessor functions and basic UI utilities

@init

//==============================================================================
// CONTROL ACCESSOR FUNCTIONS
//==============================================================================

function get_control_type(index) ( control_defs[index*10 + 0]; );
function get_control_x(index) ( control_defs[index*10 + 1]; );
function get_control_y(index) ( control_defs[index*10 + 2]; );
function get_control_w(index) ( control_defs[index*10 + 3]; );
function get_control_h(index) ( control_defs[index*10 + 4]; );
function get_control_param(index) ( control_defs[index*10 + 5]; );
function get_control_min(index) ( control_defs[index*10 + 6]; );
function get_control_max(index) ( control_defs[index*10 + 7]; );

//==============================================================================
// BASIC UI UTILITIES
//==============================================================================

function is_point_in_control(x, y, control_index) local(ctrl_x, ctrl_y, ctrl_w, ctrl_h) (
  ctrl_x = get_control_x(control_index);
  ctrl_y = get_control_y(control_index);
  ctrl_w = get_control_w(control_index);
  ctrl_h = get_control_h(control_index);
  x >= ctrl_x && x <= ctrl_x + ctrl_w && y >= ctrl_y && y <= ctrl_y + ctrl_h;
);

function update_slider_value(control_index, mouse_x) local(ctrl_x, ctrl_w, min_val, max_val, normalized_pos) (
  ctrl_x = get_control_x(control_index);
  ctrl_w = get_control_w(control_index);
  min_val = get_control_min(control_index);
  max_val = get_control_max(control_index);
  normalized_pos = (mouse_x - ctrl_x) / ctrl_w;
  normalized_pos = max(0, min(1, normalized_pos));
  min_val + normalized_pos * (max_val - min_val);
);

//==============================================================================
// GRAPH COORDINATE FUNCTIONS
//==============================================================================

// These functions convert between dB values and graph coordinates
// They only depend on constants defined in 01e_ui_config.jsfx-inc

function db_to_graph_x(db) (
  GRAPH_X + (db - GRAPH_MIN_DB) / GRAPH_RANGE_DB * GRAPH_SIZE
);

function db_to_graph_y(db) (
  GRAPH_Y + GRAPH_SIZE - (db - GRAPH_MIN_DB) / GRAPH_RANGE_DB * GRAPH_SIZE
);

function graph_x_to_db(x) (
  (x - GRAPH_X) / GRAPH_SIZE * GRAPH_RANGE_DB + GRAPH_MIN_DB
);

function graph_y_to_db(y) (
  GRAPH_MAX_DB - (y - GRAPH_Y) / GRAPH_SIZE * GRAPH_RANGE_DB
);

function is_point_in_graph(x, y) (
  x >= GRAPH_X && x <= GRAPH_X + GRAPH_SIZE &&
  y >= GRAPH_Y && y <= GRAPH_Y + GRAPH_SIZE
);

//==============================================================================
// PARAMETER LABEL FUNCTIONS (now use 01g_file_reading.jsfx-inc)
//==============================================================================

function get_control_label(slider_index) (
  // Delegate to file reading module
  get_slider_name(slider_index)
);

// Note: get_dropdown_option_count() and get_dropdown_option() are now
// defined in 01g_file_reading.jsfx-inc and available globally
