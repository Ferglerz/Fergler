// UI Rendering Module
// Control rendering and drawing functions
// Handles the visual representation of all UI controls
// Depends on: 02d_ui_utils.jsfx-inc

@init

//==============================================================================
// GENERIC CONTROL DRAWING FUNCTIONS
//==============================================================================

function draw_generic_slider(x, y, w, h, value, min_val, max_val, label) (
  // Draw label
  gfx_set(TEXT_R, TEXT_G, TEXT_B, 1);
  gfx_x = x; gfx_y = y - LABEL_HEIGHT;
  gfx_drawstr(label);

  // Draw slider background
  gfx_set(SLIDER_BG_R, SLIDER_BG_G, SLIDER_BG_B, 1);
  gfx_rect(x, y, w, h);

  // Draw slider fill
  fill_w = (value - min_val) / (max_val - min_val) * w;
  gfx_set(SLIDER_FILL_R, SLIDER_FILL_G, SLIDER_FILL_B, 1);
  gfx_rect(x, y, fill_w, h);

  // Draw handle
  handle_x = x + fill_w - 3;
  gfx_set(1, 1, 1, 1);
  gfx_rect(handle_x, y - 2, 6, h + 4);

  // Draw value text
  gfx_set(TEXT_R, TEXT_G, TEXT_B, 1);
  gfx_x = x + w + 10; gfx_y = y + 3;
  gfx_printf("%.2f", value);
);

function draw_generic_button(x, y, w, h, is_on, label) (
  // Draw button background
  is_on ? (
    gfx_set(BUTTON_ON_R, BUTTON_ON_G, BUTTON_ON_B, 1);
  ) : (
    gfx_set(BUTTON_OFF_R, BUTTON_OFF_G, BUTTON_OFF_B, 1);
  );
  gfx_rect(x, y, w, h);

  // Draw button border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(x, y, w, h, 0);

  // Draw button text
  gfx_set(TEXT_R, TEXT_G, TEXT_B, 1);
  gfx_x = x + 5; gfx_y = y + 5;
  gfx_drawstr(label);
);

function draw_generic_dropdown(x, y, w, h, current_value, label, param_index) (
  current_index = floor(current_value);
  
  // Draw label
  gfx_set(TEXT_R, TEXT_G, TEXT_B, 1);
  gfx_x = x; gfx_y = y - LABEL_HEIGHT;
  gfx_drawstr(label);

  // Draw dropdown background
  gfx_set(SLIDER_BG_R, SLIDER_BG_G, SLIDER_BG_B, 1);
  gfx_rect(x, y, w, h);

  // Draw dropdown border
  gfx_set(0.6, 0.6, 0.6, 1);
  gfx_rect(x, y, w, h, 0);

  // Draw current selection text
  gfx_set(TEXT_R, TEXT_G, TEXT_B, 1);
  gfx_x = x + 5; gfx_y = y + 5;

  // Display text using dynamic dropdown options
  get_dropdown_option_count(param_index) > 0 ? (
    // Use dynamically extracted dropdown options
    current_index < get_dropdown_option_count(param_index) ? (
      gfx_drawstr(get_dropdown_option(param_index, current_index));
    ) : (
      gfx_drawstr("Unknown");
    );
  ) : (
    // Fallback for non-dropdown parameters
    gfx_printf("%.0f", current_value);
  );

  // Draw dropdown arrow
  gfx_x = x + w - 15; gfx_y = y + 8;
  gfx_drawstr("v");
);

//==============================================================================
// GENERIC CONTROL RENDERING
//==============================================================================

function draw_control(index) (
  type = get_control_type(index);
  x = get_control_x(index);
  y = get_control_y(index);
  w = get_control_w(index);
  h = get_control_h(index);
  param_index = get_control_param(index);
  min_val = get_control_min(index);
  max_val = get_control_max(index);
  
  // Get current parameter value
  current_value = slider(param_index);
  
  type == 0 ? draw_generic_slider(x, y, w, h, current_value, min_val, max_val, get_control_label(param_index)) :
  type == 1 ? draw_generic_button(x, y, w, h, current_value > 0.5, get_control_label(param_index)) :
  type == 2 ? draw_generic_dropdown(x, y, w, h, current_value, get_control_label(param_index), param_index) :
  0;
);

//==============================================================================
// MAIN UI RENDERING ORCHESTRATION
//==============================================================================

function render_custom_ui_controls() (
  draw_ui_panel_background();

  // Draw all controls
  i = 0;
  while (i < num_controls) (
    draw_control(i);
    i += 1;
  );
);
